{
  "--modelname":
    {"help": "name of the model; data would be stored under <output-path>/<modelname>/",
     "default": "default_model_name"
    },
  "--modeltype":
    {"help": "model architecture",
     "choices": ["unet", "convnet"],
     "default": "unet"
    },
  "--filter-sizes":
    {"help": "filter sizes for each layer in the network",
     "type": "int",
     "nargs": "+"
    },
  "--network-depth":
    {"help": "depth parameter of the network architecture",
     "type": "int",
     "default": 3
    },

  "--csv":
    {"help": "csv file containing training data"},
  "--inputs":
    {"help": "input definitions for the model in json format '{<name>:{\"type\": (image)}'",
     "nargs": "+"
    },
  "--outputs":
    {"help": "output definitions for the model in json format '{<name>:{\"type\": (image|segmentation|category|numeric), \"loss\": <loss_fn>, \"weight\": <loss weight>, \"shape\": <data shape>}}'",
     "nargs": "+"
    },

  "--num-augs":
    {"help": "number of augmentations to apply for each input",
     "type": "int",
     "default": 0
    },
  "--data-preprocess-fn":
    {"help": "name of the data preprocessing function in user.py"},
  "--label-preprocess-fn":
    {"help": "name of the label preprocessing function in user.py"},
  "--data-validation-fn":
    {"help": "name of the data validation function in user.py"},
  "--label-validation-fn":
    {"help": "name of the label validation function in user.py"},

  "--batch-size":
    {"help": "batch size to use in training. NB: only values of 1 are supported",
     "type": "int",
     "default": 1
    },
  "--num-epochs":
    {"help": "maximum number of training epochs",
     "type": "int",
     "default": 800
    },
  "--shuffle-data":
    {"help": "shuffle data before each epoch",
     "default": "True",
     "action": "store_true"
    },
  "--learning-rate":
    {"help": "initial training rate",
     "default": 0.0001,
     "type": "float"
    },
  "--learning-rate-scheduler":
    {"help": "learning rate schedule function",
     "choices": ["none",
                 "halving",
                 "step_decay"],
     "default": "none"
    },
  "--optimizer":
    {"help": "optimisation strategy",
     "choices": ["sgd", "rmsprop", "adagrad",
                 "adadelta", "adam", "adamax",
                 "nadam"],
     "default": "adam"
    },
  "--training-metrics":
    {"help": "metrics to run during training",
     "nargs": "+"
    },
  "--training-steps":
    {"help": "maximum training steps per epoch",
     "type": "int"
    },
  "--validation-steps":
    {"help": "maximum validation steps per epoch",
     "type": "int"
    },
  "--output-path":
    {"help": "path for model checkpoints",
     "default": "/out/models"
    }
}
